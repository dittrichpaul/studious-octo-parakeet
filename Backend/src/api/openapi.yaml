openapi: 3.0.0
info:
  title: Ausgaben
  description: "Die Ausgaben-App nutzt einen simplen REST-Webservices zur Kommunikation\
    \ mit dem Backend. Dieser ermöglicht die üblichen CRUD-Operationen zur Suche,\
    \ Anzeige, Bearbeitung und Löschung von Ausgaben, wobei jede Ausgabe aus einem\
    \ Name, Details, Betrag und eine Priorität besteht."
  contact:
    name: Paul Dittrich, Yannik Elm
    email: pauldittrich02@gmail.com
  license:
    name: CC-BY-4.0
    url: https://creativecommons.org/licenses/by/4.0/deed.de
  version: "1.0"
servers:
- url: http://localhost:3000
tags:
- name: Index
- name: Ausgabe
paths:
  /:
    get:
      tags:
      - Index
      summary: Wurzeladresse des Webservices
      description: Liefert eine HATEOAS-Übersicht aller collections
      operationId: index
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HATEOAS_Collection'
                x-content-type: application/json

  /expense:
    get:
      tags:
      - Ausgabe
      summary: Ausgaben suchen
      description: Suche nach Ausgaben. Gibt eine Liste aller Ausgaben passend zu
        den übergebenen Suchkriterien zurück.
      operationId: search-expense
      parameters:
      - name: name
        in: query
        description: Gesuchter Name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: details
        in: query
        description: Gesuchte Details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        description: Gesuchter Betrag
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: prio
        in: query
        description: Gesuchte Priorit
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
                x-content-type: application/json
    post:
      tags:
      - Ausgabe
      summary: Ausgabe anlegen
      description: "Neue Ausgabe anlegen. Speichert die übergebene Ausgabe in der\
        \ Datenbank. Der Wert des Feldes \"_id\" wird dabei ignoriert, da in jedem Fall\
        \ eine neue Ausgabe mit neuer ID angelegt wird."
      operationId: create-expense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'

  /address/{id}:
    get:
      tags:
      - Ausgabe
      summary: Ausgabe lesen
      description: Liest eine einzelne Ausgabe vom Server.
      operationId: get-expense
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        "404":
          description: Not Found
    put:
      tags:
      - Ausgabe überschreiben
      summary: ""
      description: "Überschreibt eine vorhandene Ausgabe auf dem Server. Bis auf die\
        \ ID können alle Felder geändert werden. Der Versuch, die ID zu ändern, wird\
        \ vom Server stillschweigend ignoriert."
      operationId: update-expense
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        "404":
          description: Not Found
    patch:
      tags:
      - Einzelne Felder ändern
      summary: Einzelne Ausgabenfelder ändern
      description: "Ändert einzelne Felder einer vorhandenen Ausgabe. Zulässig sind\
        \ alle Felder bis auf die ID, da diese nachträglich nicht mehr verändert werden\
        \ darf."
      operationId: patch-expense
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        "404":
          description: Not Found
    delete:
      tags:
      - Ausgabe
      summary: Ausgabe löschen
      description: Löscht eine Ausgabe auf dem Server.
      operationId: delete-expense
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
        "404":
          description: Not Found

components:
  schemas:
    HATEOAS_Collection:
      title: HATEOAS-Links einer Collection
      type: object
      properties:
        _name:
          type: string
        query:
          $ref: '#/components/schemas/HATEOAS_Link'
        create:
          $ref: '#/components/schemas/HATEOAS_Link'

    HATEOAS_Resource:
      title: HATEOAS-Links einer Resource
      type: object
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Link'
        update:
          $ref: '#/components/schemas/HATEOAS_Link'
        patch:
          $ref: '#/components/schemas/HATEOAS_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Link'

    HATEOAS_Link:
      title: HATEOAS-Link
      type: object
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string

    Expense:
      title: Ausgabe
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/HATEOAS_Resource'
        _id:
          type: string
        name:
          type: string
        details:
          type: string
        amount:
          type: string
        prio:
          type: string
          pattern: "(.*@.*\\..*)?"
      required:
        - name
        - amount
      example:
        _id: "621ff9a936997df5baba746e"
        name: "Fox"
        details: "Mulder"
        prio: "mulder@xfiles.com"
        amount: "+49 721 553181"
  securitySchemes: {}
